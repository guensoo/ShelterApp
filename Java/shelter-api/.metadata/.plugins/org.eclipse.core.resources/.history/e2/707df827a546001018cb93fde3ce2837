package com.shelter.shelter_api.Service;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.shelter.shelter_api.DTO.ColdShelterDTO;
import com.shelter.shelter_api.Entity.ColdShelterEntity;
import com.shelter.shelter_api.Repository.ColdShelterRepository;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
@RequiredArgsConstructor
public class ColdShelterService {

    private final ColdShelterRepository repository;

    public void saveAll(List<ColdShelterDTO> dtoList) {
        List<ColdShelterEntity> shelters = dtoList.stream().map(dto ->
            ColdShelterEntity.builder()
                .id(dto.getREARE_FCLT_NO())
                .name(dto.getREARE_NM())
                .address(dto.getDADDR())
                .roadAddress(dto.getRONA_DADDR())
                .capacity(dto.getUTZTN_PSBLTY_TNOP())
                .modifiedAt(dto.getMDFCN_HR())
                .remark(dto.getRMRK())
                .weekdayStart(dto.getWKDY_OPER_BGNG_HR())
                .weekdayEnd(dto.getWKDY_OPER_END_HR())
                .saturdayStart(dto.getSTDY_OPER_BGNG_HR())
                .saturdayEnd(dto.getSTDY_OPER_END_HR())
                .sundayStart(dto.getSNDY_OPER_BGNG_HR())
                .sundayEnd(dto.getSNDY_OPER_END_HR())
                .holidayStart(dto.getLHLDY_OPER_BGNG_HR())
                .holidayEnd(dto.getLHLDY_OPER_END_HR())
                .facilityType(dto.getFCLT_TYPE())
                .facilitySubType(dto.getFCLTY_SCLAS())
                .lat(dto.getLAT())
                .lng(dto.getLOT())
                .build()
        ).collect(Collectors.toList());

        repository.saveAll(shelters);
    }
}